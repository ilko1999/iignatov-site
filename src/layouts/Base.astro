---
import "../styles/global.css";
import AnimatedHeader from '../components/AnimatedHeader.jsx';
import Analytics from '@vercel/analytics/astro';
interface Props {
	title?: string;
	description?: string;
}

const { 
	title = 'Iliyan Ignatov | Portfolio',
	description = 'Personal portfolio website of Iliyan Ignatov',
} = Astro.props;


---

<!DOCTYPE html>
<html lang="en" data-theme="forest">
	<head>
		<meta charset="UTF-8" />
		<Analytics />

		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="description" content={description} />
		<link rel="icon" type="image/svg+xml" href="/images/favicon.png" />
		<link rel="alternate" type="application/rss+xml" title="RSS Feed for Iliyan Ignatov's Blog" href="/rss.xml" />
		<title>{title}</title>

		
	</head>
	<body class="min-h-screen bg-base-100 text-base-content">
		<AnimatedHeader client:load />
		<div class="container mx-auto max-w-4xl px-4 py-8 mt-16 pb-24">
			<main id="main-content">
				<slot />
			</main>
			
		</div>

		

		<script>
			// Client-side animation setup with framer-motion DOM API
			document.addEventListener('astro:page-load', () => {
				import('framer-motion/dom').then(({ animate, stagger }) => {
					// Stagger child elements animate-in
					const elements = document.querySelectorAll('.animate-in');
					if (elements.length > 0) {
						animate(elements, 
							{ opacity: [0, 1], y: [50, 0] }, 
							{ 
								delay: stagger(0.1), 
								duration: 0.6, 
								ease: 'easeOut' 
							}
						);
					}

					// Animate all elements with data-animate attribute
					document.querySelectorAll('[data-animate]').forEach(element => {
						const direction = element.getAttribute('data-direction') || 'up';
						const delay = parseFloat(element.getAttribute('data-delay') || '0');
						const type = element.getAttribute('data-type') || 'tween';
						
						let initialY = 0;
						let initialX = 0;
						
						switch (direction) {
							case 'up':
								initialY = 50;
								break;
							case 'down':
								initialY = -50;
								break;
							case 'left':
								initialX = 50;
								break;
							case 'right':
								initialX = -50;
								break;
						}
						
						animate(
							element,
							{ 
								opacity: [0, 1], 
								y: [initialY, 0],
								x: [initialX, 0] 
							},
							{ 
								delay: delay,
								duration: 0.6, 
								ease: 'easeOut' 
							}
						);
					});
				});
			});
		</script>
		
	</body>
	<footer class="footer footer-center p-8  text-base-content	 w-full bottom-0">
		<div class="container max-w-4xl">
			<div class="grid grid-flow-col gap-4">
				<a class="link link-hover badge badge-outline badge-primary" href="/rss.xml" target="_blank" rel="noopener noreferrer">RSS</a>
			</div>
			<aside class="mt-4">
				<p>&copy; {new Date().getFullYear()} Iliyan Ignatov. All rights reserved.</p>
			</aside>
		</div>
	</footer>
</html> 